package project_280;

/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */

/**
 *
 * @author nona-
 */
public class profile_DietInfo extends javax.swing.JFrame {

    /**
     * Creates new form Profile_DietInfo
     */
    public profile_DietInfo() {
        initComponents();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        Back = new javax.swing.JLabel();
        Fish = new javax.swing.JCheckBox();
        Milk = new javax.swing.JCheckBox();
        Meat = new javax.swing.JCheckBox();
        Apple = new javax.swing.JCheckBox();
        Chiken = new javax.swing.JCheckBox();
        Nuts = new javax.swing.JCheckBox();
        Orange = new javax.swing.JCheckBox();
        Banana = new javax.swing.JCheckBox();
        Kiwi = new javax.swing.JCheckBox();
        Peach = new javax.swing.JCheckBox();
        Background = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        getContentPane().setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        Back.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                BackMouseClicked(evt);
            }
        });
        getContentPane().add(Back, new org.netbeans.lib.awtextra.AbsoluteConstraints(30, 34, 30, 20));

        Fish.setBackground(new java.awt.Color(255, 255, 255));
        Fish.setSelected(true);
        Fish.setBorder(new javax.swing.border.SoftBevelBorder(javax.swing.border.BevelBorder.RAISED));
        Fish.setEnabled(false);
        Fish.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                FishMouseClicked(evt);
            }
        });
        getContentPane().add(Fish, new org.netbeans.lib.awtextra.AbsoluteConstraints(160, 200, 20, 20));

        Milk.setBackground(new java.awt.Color(255, 255, 255));
        Milk.setBorder(new javax.swing.border.SoftBevelBorder(javax.swing.border.BevelBorder.RAISED));
        Milk.setEnabled(false);
        Milk.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                MilkMouseClicked(evt);
            }
        });
        getContentPane().add(Milk, new org.netbeans.lib.awtextra.AbsoluteConstraints(230, 200, 20, 20));

        Meat.setBackground(new java.awt.Color(255, 255, 255));
        Meat.setSelected(true);
        Meat.setBorder(new javax.swing.border.SoftBevelBorder(javax.swing.border.BevelBorder.RAISED));
        Meat.setEnabled(false);
        Meat.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                MeatMouseClicked(evt);
            }
        });
        getContentPane().add(Meat, new org.netbeans.lib.awtextra.AbsoluteConstraints(300, 200, 20, 20));

        Apple.setBackground(new java.awt.Color(255, 255, 255));
        Apple.setSelected(true);
        Apple.setBorder(new javax.swing.border.SoftBevelBorder(javax.swing.border.BevelBorder.RAISED));
        Apple.setEnabled(false);
        Apple.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                AppleMouseClicked(evt);
            }
        });
        getContentPane().add(Apple, new org.netbeans.lib.awtextra.AbsoluteConstraints(300, 260, 20, 20));

        Chiken.setBackground(new java.awt.Color(255, 255, 255));
        Chiken.setBorder(new javax.swing.border.SoftBevelBorder(javax.swing.border.BevelBorder.RAISED));
        Chiken.setEnabled(false);
        Chiken.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                ChikenMouseClicked(evt);
            }
        });
        getContentPane().add(Chiken, new org.netbeans.lib.awtextra.AbsoluteConstraints(230, 260, 20, 20));

        Nuts.setBackground(new java.awt.Color(255, 255, 255));
        Nuts.setBorder(new javax.swing.border.SoftBevelBorder(javax.swing.border.BevelBorder.RAISED));
        Nuts.setEnabled(false);
        Nuts.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                NutsMouseClicked(evt);
            }
        });
        getContentPane().add(Nuts, new org.netbeans.lib.awtextra.AbsoluteConstraints(160, 260, 20, 20));

        Orange.setBackground(new java.awt.Color(255, 255, 255));
        Orange.setBorder(new javax.swing.border.SoftBevelBorder(javax.swing.border.BevelBorder.RAISED));
        Orange.setEnabled(false);
        Orange.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                OrangeMouseClicked(evt);
            }
        });
        getContentPane().add(Orange, new org.netbeans.lib.awtextra.AbsoluteConstraints(230, 320, 20, 20));

        Banana.setBackground(new java.awt.Color(255, 255, 255));
        Banana.setBorder(new javax.swing.border.SoftBevelBorder(javax.swing.border.BevelBorder.RAISED));
        Banana.setEnabled(false);
        Banana.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                BananaMouseClicked(evt);
            }
        });
        getContentPane().add(Banana, new org.netbeans.lib.awtextra.AbsoluteConstraints(230, 380, 20, 20));

        Kiwi.setBackground(new java.awt.Color(255, 255, 255));
        Kiwi.setBorder(new javax.swing.border.SoftBevelBorder(javax.swing.border.BevelBorder.RAISED));
        Kiwi.setEnabled(false);
        Kiwi.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                KiwiMouseClicked(evt);
            }
        });
        getContentPane().add(Kiwi, new org.netbeans.lib.awtextra.AbsoluteConstraints(160, 320, 20, 20));

        Peach.setBackground(new java.awt.Color(255, 255, 255));
        Peach.setBorder(new javax.swing.border.SoftBevelBorder(javax.swing.border.BevelBorder.RAISED));
        Peach.setEnabled(false);
        Peach.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                PeachMouseClicked(evt);
            }
        });
        getContentPane().add(Peach, new org.netbeans.lib.awtextra.AbsoluteConstraints(300, 320, 20, 20));

        Background.setIcon(new javax.swing.ImageIcon(getClass().getResource("/project_280/Screen_profile_dietInfo.png"))); // NOI18N
        getContentPane().add(Background, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 0, -1, -1));

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void BackMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_BackMouseClicked
        new profile().setVisible(true);
        this.dispose();
    }//GEN-LAST:event_BackMouseClicked

    private void FishMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_FishMouseClicked
        if (Fish.isEnabled() == false) {
            Fish.setEnabled(true);
        }
    }//GEN-LAST:event_FishMouseClicked

    private void MilkMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_MilkMouseClicked
        if (Milk.isEnabled() == false) {
            Milk.setEnabled(true);
        }
    }//GEN-LAST:event_MilkMouseClicked

    private void MeatMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_MeatMouseClicked
        if (Meat.isEnabled() == false) {
            Meat.setEnabled(true);
        }
    }//GEN-LAST:event_MeatMouseClicked

    private void AppleMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_AppleMouseClicked
        if (Apple.isEnabled() == false) {
            Apple.setEnabled(true);
        }
    }//GEN-LAST:event_AppleMouseClicked

    private void ChikenMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_ChikenMouseClicked
        if (Chiken.isEnabled() == false) {
            Chiken.setEnabled(true);
        }
    }//GEN-LAST:event_ChikenMouseClicked

    private void NutsMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_NutsMouseClicked
        if (Nuts.isEnabled() == false) {
            Nuts.setEnabled(true);
        }
    }//GEN-LAST:event_NutsMouseClicked

    private void OrangeMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_OrangeMouseClicked
        if (Orange.isEnabled() == false) {
            Orange.setEnabled(true);
        }
    }//GEN-LAST:event_OrangeMouseClicked

    private void BananaMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_BananaMouseClicked
        if (Banana.isEnabled() == false) {
            Banana.setEnabled(true);
        }
    }//GEN-LAST:event_BananaMouseClicked

    private void KiwiMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_KiwiMouseClicked
        if (Kiwi.isEnabled() == false) {
            Kiwi.setEnabled(true);
        }
    }//GEN-LAST:event_KiwiMouseClicked

    private void PeachMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_PeachMouseClicked
        if (Peach.isEnabled() == false) {
            Peach.setEnabled(true);
        }
    }//GEN-LAST:event_PeachMouseClicked

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(profile_DietInfo.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(profile_DietInfo.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(profile_DietInfo.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(profile_DietInfo.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new profile_DietInfo().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JCheckBox Apple;
    private javax.swing.JLabel Back;
    private javax.swing.JLabel Background;
    private javax.swing.JCheckBox Banana;
    private javax.swing.JCheckBox Chiken;
    private javax.swing.JCheckBox Fish;
    private javax.swing.JCheckBox Kiwi;
    private javax.swing.JCheckBox Meat;
    private javax.swing.JCheckBox Milk;
    private javax.swing.JCheckBox Nuts;
    private javax.swing.JCheckBox Orange;
    private javax.swing.JCheckBox Peach;
    // End of variables declaration//GEN-END:variables
}
